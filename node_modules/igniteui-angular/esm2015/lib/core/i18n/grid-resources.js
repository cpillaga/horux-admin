export const GridResourceStringsEN = {
    igx_grid_groupByArea_message: 'Drag a column header and drop it here to group by that column.',
    igx_grid_groupByArea_select_message: 'Select all rows in the group with field name {0} and value {1}.',
    igx_grid_groupByArea_deselect_message: 'Deselect all rows in the group with field name {0} and value {1}.',
    igx_grid_emptyFilteredGrid_message: 'No records found.',
    igx_grid_emptyGrid_message: 'Grid has no data.',
    igx_grid_filter: 'Filter',
    igx_grid_filter_row_close: 'Close',
    igx_grid_filter_row_reset: 'Reset',
    igx_grid_filter_row_placeholder: 'Add filter value',
    igx_grid_filter_row_boolean_placeholder: 'All',
    igx_grid_filter_row_date_placeholder: 'Pick up date',
    igx_grid_filter_operator_and: 'And',
    igx_grid_filter_operator_or: 'Or',
    igx_grid_complex_filter: 'Complex Filter',
    igx_grid_filter_contains: 'Contains',
    igx_grid_filter_doesNotContain: 'Does Not Contain',
    igx_grid_filter_startsWith: 'Starts With',
    igx_grid_filter_endsWith: 'Ends With',
    igx_grid_filter_equals: 'Equals',
    igx_grid_filter_doesNotEqual: 'Does Not Equal',
    igx_grid_filter_empty: 'Empty',
    igx_grid_filter_notEmpty: 'Not Empty',
    igx_grid_filter_null: 'Null',
    igx_grid_filter_notNull: 'Not Null',
    igx_grid_filter_before: 'Before',
    igx_grid_filter_after: 'After',
    igx_grid_filter_today: 'Today',
    igx_grid_filter_yesterday: 'Yesterday',
    igx_grid_filter_thisMonth: 'This Month',
    igx_grid_filter_lastMonth: 'Last Month',
    igx_grid_filter_nextMonth: 'Next Month',
    igx_grid_filter_thisYear: 'This Year',
    igx_grid_filter_lastYear: 'Last Year',
    igx_grid_filter_nextYear: 'Next Year',
    igx_grid_filter_greaterThan: 'Greater Than',
    igx_grid_filter_lessThan: 'Less Than',
    igx_grid_filter_greaterThanOrEqualTo: 'Greater Than Or Equal To',
    igx_grid_filter_lessThanOrEqualTo: 'Less Than Or Equal To',
    igx_grid_filter_true: 'True',
    igx_grid_filter_false: 'False',
    igx_grid_filter_all: 'All',
    igx_grid_filter_condition_placeholder: 'Select filter',
    igx_grid_summary_count: 'Count',
    igx_grid_summary_min: 'Min',
    igx_grid_summary_max: 'Max',
    igx_grid_summary_sum: 'Sum',
    igx_grid_summary_average: 'Avg',
    igx_grid_summary_earliest: 'Earliest',
    igx_grid_summary_latest: 'Latest',
    igx_grid_excel_filter_moving_left: 'move left',
    igx_grid_excel_filter_moving_left_short: 'left',
    igx_grid_excel_filter_moving_right: 'move right',
    igx_grid_excel_filter_moving_right_short: 'right',
    igx_grid_excel_filter_moving_header: 'move',
    igx_grid_excel_filter_sorting_asc: 'ascending',
    igx_grid_excel_filter_sorting_asc_short: 'asc',
    igx_grid_excel_filter_sorting_desc: 'descending',
    igx_grid_excel_filter_sorting_desc_short: 'desc',
    igx_grid_excel_filter_sorting_header: 'sort',
    igx_grid_excel_filter_clear: 'Clear column filters',
    igx_grid_excel_custom_dialog_add: 'add filter',
    igx_grid_excel_custom_dialog_clear: 'Clear filter',
    igx_grid_excel_custom_dialog_header: 'Custom auto-filter on column: ',
    igx_grid_excel_cancel: 'cancel',
    igx_grid_excel_apply: 'apply',
    igx_grid_excel_search_placeholder: 'Search',
    igx_grid_excel_select_all: 'Select All',
    igx_grid_excel_select_all_search_results: 'Select all search results',
    igx_grid_excel_add_to_filter: 'Add current selection to filter',
    igx_grid_excel_blanks: '(Blanks)',
    igx_grid_excel_hide: 'Hide column',
    igx_grid_excel_show: 'Show column',
    igx_grid_excel_pin: 'Pin column',
    igx_grid_excel_unpin: 'Unpin column',
    igx_grid_excel_select: 'Select column',
    igx_grid_excel_deselect: 'Deselect column',
    igx_grid_excel_text_filter: 'Text filter',
    igx_grid_excel_number_filter: 'Number filter',
    igx_grid_excel_date_filter: 'Date filter',
    igx_grid_excel_boolean_filter: 'Boolean filter',
    igx_grid_excel_currency_filter: 'Currency filter',
    igx_grid_excel_custom_filter: 'Custom filter...',
    igx_grid_advanced_filter_title: 'Advanced Filtering',
    igx_grid_advanced_filter_and_group: '"And" Group',
    igx_grid_advanced_filter_or_group: '"Or" Group',
    igx_grid_advanced_filter_end_group: 'End Group',
    igx_grid_advanced_filter_create_and_group: 'Create "And" Group',
    igx_grid_advanced_filter_create_or_group: 'Create "Or" Group',
    igx_grid_advanced_filter_and_label: 'and',
    igx_grid_advanced_filter_or_label: 'or',
    igx_grid_advanced_filter_add_condition: 'Condition',
    igx_grid_advanced_filter_ungroup: 'Ungroup',
    igx_grid_advanced_filter_delete: 'Delete',
    igx_grid_advanced_filter_delete_filters: 'Delete filters',
    igx_grid_advanced_filter_initial_text: 'Start with creating a group of conditions linked with "And" or "Or"',
    igx_grid_advanced_filter_column_placeholder: 'Select column',
    igx_grid_advanced_filter_value_placeholder: 'Value',
    igx_grid_pinned_row_indicator: 'Pinned',
    igx_grid_hiding_check_all_label: 'Show All',
    igx_grid_hiding_uncheck_all_label: 'Hide All',
    igx_grid_pinning_check_all_label: 'Pin All',
    igx_grid_pinning_uncheck_all_label: 'Unpin All',
    igx_grid_row_edit_btn_done: 'Done',
    igx_grid_row_edit_btn_cancel: 'Cancel',
    igx_grid_toolbar_actions_filter_prompt: 'Filter columns list ...',
    igx_grid_toolbar_pinning_button_tooltip: 'Open column pinning dropdown',
    igx_grid_toolbar_hiding_button_tooltip: 'Open column hiding dropdown',
    igx_grid_toolbar_pinning_title: 'Pinned columns',
    igx_grid_toolbar_hiding_title: 'Visible columns',
    igx_grid_toolbar_advanced_filtering_button_tooltip: 'Open advanced filtering dialog',
    igx_grid_toolbar_advanced_filtering_button_label: 'Advanced filtering',
    igx_grid_toolbar_exporter_button_tooltip: 'Open exporter dropdown',
    igx_grid_toolbar_exporter_button_label: 'Export',
    igx_grid_toolbar_exporter_excel_entry_text: 'Export to Excel',
    igx_grid_toolbar_exporter_csv_entry_text: 'Export to CSV',
    igx_grid_snackbar_addrow_label: 'Row added',
    igx_grid_snackbar_addrow_actiontext: 'SHOW',
    igx_grid_actions_edit_label: 'Edit',
    igx_grid_actions_add_label: 'Add',
    igx_grid_add_row_label: 'ADD ROW',
    igx_grid_actions_add_child_label: 'Add Child',
    igx_grid_actions_delete_label: 'Delete',
    igx_grid_actions_pin_label: 'Pin',
    igx_grid_actions_unpin_label: 'Unpin',
    igx_grid_actions_jumpUp_label: 'Jump up',
    igx_grid_actions_jumpDown_label: 'Jump down'
};
//# sourceMappingURL=data:application/json;base64,