import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { IgxGridFilterConditionPipe, IgxGridTransactionPipe, IgxGridNotGroupedPipe, IgxGridTopLevelColumns, IgxGridCellStylesPipe, IgxGridCellStyleClassesPipe, IgxGridPaginatorOptionsPipe, IgxHasVisibleColumnsPipe, IgxGridRowPinningPipe, IgxColumnActionEnabledPipe, IgxFilterActionColumnsPipe, IgxSortActionColumnsPipe, IgxGridDataMapperPipe, IgxStringReplacePipe, IgxGridTransactionStatePipe, IgxColumnFormatterPipe, IgxGridAddRowPipe, IgxHeaderGroupStylePipe } from './pipes';
export class IgxGridPipesModule {
}
IgxGridPipesModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    IgxGridFilterConditionPipe,
                    IgxGridTransactionPipe,
                    IgxGridNotGroupedPipe,
                    IgxGridTopLevelColumns,
                    IgxGridCellStylesPipe,
                    IgxGridCellStyleClassesPipe,
                    IgxGridPaginatorOptionsPipe,
                    IgxHasVisibleColumnsPipe,
                    IgxGridRowPinningPipe,
                    IgxColumnActionEnabledPipe,
                    IgxFilterActionColumnsPipe,
                    IgxSortActionColumnsPipe,
                    IgxGridDataMapperPipe,
                    IgxStringReplacePipe,
                    IgxGridTransactionStatePipe,
                    IgxGridAddRowPipe,
                    IgxColumnFormatterPipe,
                    IgxHeaderGroupStylePipe
                ],
                exports: [
                    IgxGridFilterConditionPipe,
                    IgxGridTransactionPipe,
                    IgxGridNotGroupedPipe,
                    IgxGridTopLevelColumns,
                    IgxGridCellStylesPipe,
                    IgxGridCellStyleClassesPipe,
                    IgxGridPaginatorOptionsPipe,
                    IgxHasVisibleColumnsPipe,
                    IgxGridRowPinningPipe,
                    IgxColumnActionEnabledPipe,
                    IgxFilterActionColumnsPipe,
                    IgxSortActionColumnsPipe,
                    IgxGridDataMapperPipe,
                    IgxStringReplacePipe,
                    IgxGridTransactionStatePipe,
                    IgxGridAddRowPipe,
                    IgxColumnFormatterPipe,
                    IgxHeaderGroupStylePipe
                ],
                imports: [
                    CommonModule
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1waXBlcy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvZ3JpZHMvY29tbW9uL2dyaWQtcGlwZXMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFDSCwwQkFBMEIsRUFDMUIsc0JBQXNCLEVBQ3RCLHFCQUFxQixFQUNyQixzQkFBc0IsRUFDdEIscUJBQXFCLEVBQ3JCLDJCQUEyQixFQUMzQiwyQkFBMkIsRUFDM0Isd0JBQXdCLEVBQ3hCLHFCQUFxQixFQUNyQiwwQkFBMEIsRUFDMUIsMEJBQTBCLEVBQzFCLHdCQUF3QixFQUN4QixxQkFBcUIsRUFDckIsb0JBQW9CLEVBQ3BCLDJCQUEyQixFQUMzQixzQkFBc0IsRUFDdEIsaUJBQWlCLEVBQ2pCLHVCQUF1QixFQUMxQixNQUFNLFNBQVMsQ0FBQztBQStDakIsTUFBTSxPQUFPLGtCQUFrQjs7O1lBN0M5QixRQUFRLFNBQUM7Z0JBQ04sWUFBWSxFQUFFO29CQUNWLDBCQUEwQjtvQkFDMUIsc0JBQXNCO29CQUN0QixxQkFBcUI7b0JBQ3JCLHNCQUFzQjtvQkFDdEIscUJBQXFCO29CQUNyQiwyQkFBMkI7b0JBQzNCLDJCQUEyQjtvQkFDM0Isd0JBQXdCO29CQUN4QixxQkFBcUI7b0JBQ3JCLDBCQUEwQjtvQkFDMUIsMEJBQTBCO29CQUMxQix3QkFBd0I7b0JBQ3hCLHFCQUFxQjtvQkFDckIsb0JBQW9CO29CQUNwQiwyQkFBMkI7b0JBQzNCLGlCQUFpQjtvQkFDakIsc0JBQXNCO29CQUN0Qix1QkFBdUI7aUJBQzFCO2dCQUNELE9BQU8sRUFBRTtvQkFDTCwwQkFBMEI7b0JBQzFCLHNCQUFzQjtvQkFDdEIscUJBQXFCO29CQUNyQixzQkFBc0I7b0JBQ3RCLHFCQUFxQjtvQkFDckIsMkJBQTJCO29CQUMzQiwyQkFBMkI7b0JBQzNCLHdCQUF3QjtvQkFDeEIscUJBQXFCO29CQUNyQiwwQkFBMEI7b0JBQzFCLDBCQUEwQjtvQkFDMUIsd0JBQXdCO29CQUN4QixxQkFBcUI7b0JBQ3JCLG9CQUFvQjtvQkFDcEIsMkJBQTJCO29CQUMzQixpQkFBaUI7b0JBQ2pCLHNCQUFzQjtvQkFDdEIsdUJBQXVCO2lCQUMxQjtnQkFDRCxPQUFPLEVBQUU7b0JBQ0wsWUFBWTtpQkFDZjthQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge1xuICAgIElneEdyaWRGaWx0ZXJDb25kaXRpb25QaXBlLFxuICAgIElneEdyaWRUcmFuc2FjdGlvblBpcGUsXG4gICAgSWd4R3JpZE5vdEdyb3VwZWRQaXBlLFxuICAgIElneEdyaWRUb3BMZXZlbENvbHVtbnMsXG4gICAgSWd4R3JpZENlbGxTdHlsZXNQaXBlLFxuICAgIElneEdyaWRDZWxsU3R5bGVDbGFzc2VzUGlwZSxcbiAgICBJZ3hHcmlkUGFnaW5hdG9yT3B0aW9uc1BpcGUsXG4gICAgSWd4SGFzVmlzaWJsZUNvbHVtbnNQaXBlLFxuICAgIElneEdyaWRSb3dQaW5uaW5nUGlwZSxcbiAgICBJZ3hDb2x1bW5BY3Rpb25FbmFibGVkUGlwZSxcbiAgICBJZ3hGaWx0ZXJBY3Rpb25Db2x1bW5zUGlwZSxcbiAgICBJZ3hTb3J0QWN0aW9uQ29sdW1uc1BpcGUsXG4gICAgSWd4R3JpZERhdGFNYXBwZXJQaXBlLFxuICAgIElneFN0cmluZ1JlcGxhY2VQaXBlLFxuICAgIElneEdyaWRUcmFuc2FjdGlvblN0YXRlUGlwZSxcbiAgICBJZ3hDb2x1bW5Gb3JtYXR0ZXJQaXBlLFxuICAgIElneEdyaWRBZGRSb3dQaXBlLFxuICAgIElneEhlYWRlckdyb3VwU3R5bGVQaXBlXG59IGZyb20gJy4vcGlwZXMnO1xuXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBJZ3hHcmlkRmlsdGVyQ29uZGl0aW9uUGlwZSxcbiAgICAgICAgSWd4R3JpZFRyYW5zYWN0aW9uUGlwZSxcbiAgICAgICAgSWd4R3JpZE5vdEdyb3VwZWRQaXBlLFxuICAgICAgICBJZ3hHcmlkVG9wTGV2ZWxDb2x1bW5zLFxuICAgICAgICBJZ3hHcmlkQ2VsbFN0eWxlc1BpcGUsXG4gICAgICAgIElneEdyaWRDZWxsU3R5bGVDbGFzc2VzUGlwZSxcbiAgICAgICAgSWd4R3JpZFBhZ2luYXRvck9wdGlvbnNQaXBlLFxuICAgICAgICBJZ3hIYXNWaXNpYmxlQ29sdW1uc1BpcGUsXG4gICAgICAgIElneEdyaWRSb3dQaW5uaW5nUGlwZSxcbiAgICAgICAgSWd4Q29sdW1uQWN0aW9uRW5hYmxlZFBpcGUsXG4gICAgICAgIElneEZpbHRlckFjdGlvbkNvbHVtbnNQaXBlLFxuICAgICAgICBJZ3hTb3J0QWN0aW9uQ29sdW1uc1BpcGUsXG4gICAgICAgIElneEdyaWREYXRhTWFwcGVyUGlwZSxcbiAgICAgICAgSWd4U3RyaW5nUmVwbGFjZVBpcGUsXG4gICAgICAgIElneEdyaWRUcmFuc2FjdGlvblN0YXRlUGlwZSxcbiAgICAgICAgSWd4R3JpZEFkZFJvd1BpcGUsXG4gICAgICAgIElneENvbHVtbkZvcm1hdHRlclBpcGUsXG4gICAgICAgIElneEhlYWRlckdyb3VwU3R5bGVQaXBlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIElneEdyaWRGaWx0ZXJDb25kaXRpb25QaXBlLFxuICAgICAgICBJZ3hHcmlkVHJhbnNhY3Rpb25QaXBlLFxuICAgICAgICBJZ3hHcmlkTm90R3JvdXBlZFBpcGUsXG4gICAgICAgIElneEdyaWRUb3BMZXZlbENvbHVtbnMsXG4gICAgICAgIElneEdyaWRDZWxsU3R5bGVzUGlwZSxcbiAgICAgICAgSWd4R3JpZENlbGxTdHlsZUNsYXNzZXNQaXBlLFxuICAgICAgICBJZ3hHcmlkUGFnaW5hdG9yT3B0aW9uc1BpcGUsXG4gICAgICAgIElneEhhc1Zpc2libGVDb2x1bW5zUGlwZSxcbiAgICAgICAgSWd4R3JpZFJvd1Bpbm5pbmdQaXBlLFxuICAgICAgICBJZ3hDb2x1bW5BY3Rpb25FbmFibGVkUGlwZSxcbiAgICAgICAgSWd4RmlsdGVyQWN0aW9uQ29sdW1uc1BpcGUsXG4gICAgICAgIElneFNvcnRBY3Rpb25Db2x1bW5zUGlwZSxcbiAgICAgICAgSWd4R3JpZERhdGFNYXBwZXJQaXBlLFxuICAgICAgICBJZ3hTdHJpbmdSZXBsYWNlUGlwZSxcbiAgICAgICAgSWd4R3JpZFRyYW5zYWN0aW9uU3RhdGVQaXBlLFxuICAgICAgICBJZ3hHcmlkQWRkUm93UGlwZSxcbiAgICAgICAgSWd4Q29sdW1uRm9ybWF0dGVyUGlwZSxcbiAgICAgICAgSWd4SGVhZGVyR3JvdXBTdHlsZVBpcGVcbiAgICBdLFxuICAgIGltcG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlXG4gICAgXVxuICB9KVxuZXhwb3J0IGNsYXNzIElneEdyaWRQaXBlc01vZHVsZSB7IH1cbiJdfQ==