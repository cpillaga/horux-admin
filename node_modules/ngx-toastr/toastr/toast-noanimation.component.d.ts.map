{"version":3,"file":"toast-noanimation.component.d.ts","sources":["toast-noanimation.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;;AACA","sourcesContent":["import { ApplicationRef, OnDestroy } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { IndividualConfig, ToastPackage } from './toastr-config';\nimport { ToastrService } from './toastr.service';\nexport declare class ToastNoAnimation implements OnDestroy {\n    protected toastrService: ToastrService;\n    toastPackage: ToastPackage;\n    protected appRef: ApplicationRef;\n    message?: string | SafeHtml | null;\n    title?: string;\n    options: IndividualConfig;\n    /** width of progress bar */\n    width: number;\n    /** a combination of toast type and options.toastClass */\n    toastClasses: string;\n    /** controls animation */\n    state: string;\n    private timeout;\n    private intervalId;\n    private hideTime;\n    private sub;\n    private sub1;\n    constructor(toastrService: ToastrService, toastPackage: ToastPackage, appRef: ApplicationRef);\n    ngOnDestroy(): void;\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast(): void;\n    /**\n     * updates progress bar width\n     */\n    updateProgress(): void;\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove(): void;\n    tapToast(): void;\n    stickAround(): void;\n    delayedHideToast(): void;\n}\nexport declare class ToastNoAnimationModule {\n}\n"]}