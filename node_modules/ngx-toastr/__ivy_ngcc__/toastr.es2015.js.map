{"version":3,"file":"toastr.es2015.js","sources":["../../src/lib/portal/portal.ts","../../src/lib/portal/dom-portal-host.ts","../../src/lib/overlay/overlay-ref.ts","../../src/lib/overlay/overlay-container.ts","../../src/lib/overlay/overlay.ts","../../src/lib/toastr/toast.directive.ts","../../src/lib/toastr/toastr-config.ts","../../src/lib/toastr/toast-injector.ts","../../src/lib/toastr/toast-token.ts","../../src/lib/toastr/toastr.service.ts","../../src/lib/toastr/toast.component.ts","../../src/lib/toastr/default-config.ts","../../src/lib/toastr/toastr.module.ts","../../src/lib/toastr/toast-noanimation.component.ts"],"names":["Subject"],"mappings":"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","sourcesContent":["import {\n  ComponentRef,\n  Injector,\n  ViewContainerRef\n} from '@angular/core';\n\nexport interface ComponentType<T> {\n  new (...args: any[]): T;\n}\n\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> {\n  private _attachedHost?: BasePortalHost;\n  /** The type of the component that will be instantiated for attachment. */\n  component: ComponentType<T>;\n\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalHost.\n   * The origin necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef: ViewContainerRef;\n\n  /** Injector used for the instantiation of the component. */\n  injector: Injector;\n\n  constructor(component: ComponentType<T>, injector: Injector) {\n    this.component = component;\n    this.injector = injector;\n  }\n\n  /** Attach this portal to a host. */\n  attach(host: BasePortalHost, newestOnTop: boolean) {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n\n  /** Detach this portal from its host */\n  detach() {\n    const host = this._attachedHost;\n    if (host) {\n      this._attachedHost = undefined;\n      return host.detach();\n    }\n  }\n\n  /** Whether this portal is attached to a host. */\n  get isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host?: BasePortalHost) {\n    this._attachedHost = host;\n  }\n}\n\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nexport abstract class BasePortalHost {\n  /** The portal currently attached to the host. */\n  private _attachedPortal?: ComponentPortal<any>;\n\n  /** A function that will permanently dispose this host. */\n  private _disposeFn?: () => void;\n\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T>;\n\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost();\n    }\n\n    this._attachedPortal = undefined;\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = undefined;\n    }\n  }\n\n  setDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n} from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from './portal';\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nexport class DomPortalHost extends BasePortalHost {\n  constructor(\n    private _hostDomElement: Element,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n  ) {\n    super();\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal<T>(\n    portal: ComponentPortal<T>,\n    newestOnTop: boolean,\n  ): ComponentRef<T> {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(\n      portal.component,\n    );\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n    componentRef = componentFactory.create(portal.injector);\n\n    // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n    this._appRef.attachView(componentRef.hostView);\n\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(\n        this._getComponentRootNode(componentRef),\n        this._hostDomElement.firstChild,\n      );\n    } else {\n      this._hostDomElement.appendChild(\n        this._getComponentRootNode(componentRef),\n      );\n    }\n\n    return componentRef;\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n}\n","import { ComponentRef } from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from '../portal/portal';\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef {\n  constructor(private _portalHost: BasePortalHost) {}\n\n  attach(\n    portal: ComponentPortal<any>,\n    newestOnTop: boolean = true,\n  ): ComponentRef<any> {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n  detach() {\n    return this._portalHost.detach();\n  }\n}\n","/**\n * The OverlayContainer is the container in which all overlays will load.\n * It should be provided in the root component to ensure it is properly shared.\n */\nexport class OverlayContainer {\n  private _containerElement: HTMLElement;\n\n  /**\n   * This method returns the overlay container element.  It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement(): HTMLElement {\n    if (!this._containerElement) { this._createContainer(); }\n    return this._containerElement;\n  }\n\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  private _createContainer(): void {\n    const container = document.createElement('div');\n    container.classList.add('overlay-container');\n    document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { DomPortalHost } from '../portal/dom-portal-host';\nimport { OverlayRef } from './overlay-ref';\n\nimport { ToastContainerDirective } from '../toastr/toast.directive';\nimport { OverlayContainer } from './overlay-container';\n\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\n @Injectable()\n  export class Overlay {\n    private _paneElements: {string?: HTMLElement} = {};\n    constructor(private _overlayContainer: OverlayContainer,\n                private _componentFactoryResolver: ComponentFactoryResolver,\n                private _appRef: ApplicationRef) {}\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n  create(positionClass?: string, overlayContainer?: ToastContainerDirective): OverlayRef {\n    // get existing pane if possible\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n  }\n\n  getPaneElement(positionClass: string = '', overlayContainer?: ToastContainerDirective): HTMLElement {\n    if (!this._paneElements[positionClass]) {\n      this._paneElements[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n    }\n    return this._paneElements[positionClass];\n  }\n\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  private _createPaneElement(positionClass: string, overlayContainer?: ToastContainerDirective): HTMLElement {\n    const pane = document.createElement('div');\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n\n    if (!overlayContainer) {\n      this._overlayContainer.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n    return pane;\n  }\n\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n  private _createPortalHost(pane: HTMLElement): DomPortalHost {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n  }\n\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   */\n  private _createOverlayRef(pane: HTMLElement): OverlayRef {\n    return new OverlayRef(this._createPortalHost(pane));\n  }\n}\n\n\n/** Providers for Overlay and its related injectables. */\nexport const OVERLAY_PROVIDERS = [\n  Overlay,\n  OverlayContainer,\n];\n","import {\n  Directive,\n  ElementRef,\n  NgModule,\n} from '@angular/core';\n\n@Directive({\n  selector: '[toastContainer]',\n  exportAs: 'toastContainer',\n})\nexport class ToastContainerDirective {\n  constructor(private el: ElementRef) { }\n  getContainerElement(): HTMLElement {\n    return this.el.nativeElement;\n  }\n}\n\n@NgModule({\n  declarations: [ToastContainerDirective],\n  exports: [ToastContainerDirective],\n})\nexport class ToastContainerModule {}\n","import { SafeHtml } from '@angular/platform-browser';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nimport { ComponentType } from '../portal/portal';\nimport { ToastRef } from './toast-injector';\n\n/**\n * Configuration for an individual toast.\n */\n export interface IndividualConfig {\n  /**\n   * disable both timeOut and extendedTimeOut\n   * default: false\n   */\n  disableTimeOut: boolean;\n  /**\n  * toast time to live in milliseconds\n  * default: 5000\n  */\n  timeOut: number;\n  /**\n  * toast show close button\n  * default: false\n  */\n  closeButton: boolean;\n  /** time to close after a user hovers over toast */\n  /**\n   * show toast progress bar\n   * default: false\n   */\n  extendedTimeOut: number;\n  /**\n   * show toast progress bar\n   * default: false\n   */\n  progressBar: boolean;\n\n  /**\n   * changes toast progress bar animation\n   * default: decreasing\n   */\n  progressAnimation?: 'increasing' | 'decreasing';\n  /**\n   * render html in toast message (possibly unsafe)\n   * default: false\n   */\n  enableHtml: boolean;\n  /**\n   * css class on toast component\n   * default: toast\n   */\n  toastClass: string;\n  /**\n   * css class on toast container\n   * default: toast-top-right\n   */\n  positionClass: string;\n  /**\n   * css class on to toast title\n   * default: toast-title\n   */\n  titleClass: string;\n  /**\n   * css class on to toast title\n   * default: toast-title\n   */\n  messageClass: string;\n  /**\n   * animation easing on toast\n   * default: ease-in\n   */\n  easing: string;\n  /**\n   * animation ease time on toast\n   * default: 300\n   */\n  easeTime: string | number;\n  /**\n   * clicking on toast dismisses it\n   * default: true\n   */\n  tapToDismiss: boolean;\n  /**\n   * Angular toast component to be shown\n   * default: Toast\n   */\n  toastComponent: ComponentType<any>;\n  /**\n   * Helps show toast from a websocket or from event outside Angular\n   * default: false\n   */\n  onActivateTick: boolean;\n}\n\nexport interface ToastrIconClasses {\n  error: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\n/**\n * Global Toast configuration\n * Includes all IndividualConfig\n */\nexport interface GlobalConfig extends IndividualConfig {\n  /**\n   * max toasts opened. Toasts will be queued\n   * Zero is unlimited\n   * default: 0\n   */\n  maxOpened: number;\n  /**\n   * dismiss current toast when max is reached\n   * default: false\n   */\n  autoDismiss: boolean;\n  iconClasses: Partial<ToastrIconClasses>;\n  /**\n   * New toast placement\n   * default: true\n   */\n  newestOnTop: boolean;\n  /**\n   * block duplicate messages\n   * default: false\n   */\n  preventDuplicates: boolean;\n}\n\n/**\n * Everything a toast needs to launch\n */\nexport class ToastPackage {\n  private _onTap = new Subject<any>();\n  private _onAction = new Subject<any>();\n\n  constructor(\n    public toastId: number,\n    public config: IndividualConfig,\n    public message: string | SafeHtml | null | undefined,\n    public title: string | undefined,\n    public toastType: string,\n    public toastRef: ToastRef<any>,\n  ) {\n    this.toastRef.afterClosed().subscribe(() => {\n      this._onAction.complete();\n      this._onTap.complete();\n    });\n  }\n\n  /** Fired on click */\n  triggerTap() {\n    this._onTap.next();\n    this._onTap.complete();\n  }\n\n  onTap(): Observable<any> {\n    return this._onTap.asObservable();\n  }\n\n  /** available for use in custom toast */\n  triggerAction(action?: any) {\n    this._onAction.next(action);\n  }\n\n  onAction(): Observable<any> {\n    return this._onAction.asObservable();\n  }\n}\n\n/* tslint:disable:no-empty-interface */\nexport interface GlobalToastrConfig extends GlobalConfig {}\nexport interface IndividualToastrConfig extends IndividualConfig {}\nexport interface ToastrConfig extends IndividualConfig {}\n","import { Injector } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nimport { OverlayRef } from '../overlay/overlay-ref';\nimport { ToastPackage } from './toastr-config';\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nexport class ToastRef<T> {\n  /** The instance of component opened into the toast. */\n  componentInstance: T;\n\n  /** Subject for notifying the user that the toast has finished closing. */\n  private _afterClosed = new Subject<any>();\n  /** triggered when toast is activated */\n  private _activate = new Subject<any>();\n  /** notifies the toast that it should close before the timeout */\n  private _manualClose = new Subject<any>();\n\n  constructor(private _overlayRef: OverlayRef) { }\n\n  manualClose() {\n    this._manualClose.next();\n    this._manualClose.complete();\n  }\n\n  manualClosed(): Observable<any> {\n    return this._manualClose.asObservable();\n  }\n\n  /**\n   * Close the toast.\n   */\n  close(): void {\n    this._overlayRef.detach();\n    this._afterClosed.next();\n    this._afterClosed.complete();\n    this._manualClose.complete();\n    this._activate.complete();\n  }\n\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterClosed(): Observable<any> {\n    return this._afterClosed.asObservable();\n  }\n\n  isInactive() {\n    return this._activate.isStopped;\n  }\n\n  activate() {\n    this._activate.next();\n    this._activate.complete();\n  }\n\n  /** Gets an observable that is notified when the toast has started opening. */\n  afterActivate(): Observable<any> {\n    return this._activate.asObservable();\n  }\n}\n\n\n/** Custom injector type specifically for instantiating components with a toast. */\nexport class ToastInjector implements Injector {\n  constructor(\n    private _toastPackage: ToastPackage,\n    private _parentInjector: Injector) { }\n\n  get(token: any, notFoundValue?: any): any {\n    if (token === ToastPackage && this._toastPackage) {\n      return this._toastPackage;\n    }\n    return this._parentInjector.get(token, notFoundValue);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { GlobalConfig } from './toastr-config';\n\nexport interface ToastToken {\n  config: GlobalConfig;\n  defaults: any;\n}\n\nexport const TOAST_CONFIG = new InjectionToken<ToastToken>('ToastConfig');\n","import {\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n  SecurityContext\n} from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { Observable } from 'rxjs/Observable';\n\nimport { Overlay } from '../overlay/overlay';\nimport { ComponentPortal } from '../portal/portal';\nimport { ToastInjector, ToastRef } from './toast-injector';\nimport { ToastToken, TOAST_CONFIG } from './toast-token';\nimport { ToastContainerDirective } from './toast.directive';\nimport {\n  GlobalConfig,\n  IndividualConfig,\n  ToastPackage,\n} from './toastr-config';\n\n\nexport interface ActiveToast {\n  /** Your Toast ID. Use this to close it individually */\n  toastId: number;\n  /** the message of your toast. Stored to prevent duplicates */\n  message: string;\n  /** a reference to the component see portal.ts */\n  portal: ComponentRef<any>;\n  /** a reference to your toast */\n  toastRef: ToastRef<any>;\n  /** triggered when toast is active */\n  onShown: Observable<any>;\n  /** triggered when toast is destroyed */\n  onHidden: Observable<any>;\n  /** triggered on toast click */\n  onTap: Observable<any>;\n  /** available for your use in custom toast */\n  onAction: Observable<any>;\n}\n\n@Injectable()\nexport class ToastrService {\n  toastrConfig: GlobalConfig;\n  currentlyActive = 0;\n  toasts: ActiveToast[] = [];\n  overlayContainer: ToastContainerDirective;\n  previousToastMessage: string | undefined;\n  private index = 0;\n\n  constructor(\n    @Inject(TOAST_CONFIG) token: ToastToken,\n    private overlay: Overlay,\n    private _injector: Injector,\n    private sanitizer: DomSanitizer,\n    private ngZone: NgZone\n  ) {\n    const defaultConfig = new token.defaults;\n    this.toastrConfig = { ...defaultConfig, ...token.config };\n    this.toastrConfig.iconClasses = {\n      ...defaultConfig.iconClasses,\n      ...token.config.iconClasses,\n    };\n  }\n  /** show toast */\n  show(message?: string, title?: string, override: Partial<IndividualConfig> = {}, type = '') {\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show successful toast */\n  success(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.success || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show error toast */\n  error(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.error || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show info toast */\n  info(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.info || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show warning toast */\n  warning(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.warning || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /**\n   * Remove all or a single toast by id\n   */\n  clear(toastId?: number) {\n    // Call every toastRef manualClose function\n    for (const toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.toastRef.manualClose();\n          return;\n        }\n      } else {\n        toast.toastRef.manualClose();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n  remove(toastId: number) {\n    const found = this._findToast(toastId);\n    if (!found) {\n      return false;\n    }\n    found.activeToast.toastRef.close();\n    this.toasts.splice(found.index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n    if (this.currentlyActive <= +this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n      const p = this.toasts[this.currentlyActive].toastRef;\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determines if toast message is already shown\n   */\n  isDuplicate(message: string) {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].message === message) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** create a clone of global config and apply individual settings */\n  private applyConfig(override: Partial<IndividualConfig> = {}): GlobalConfig {\n    return { ...this.toastrConfig, ...override };\n  }\n\n  /**\n   * Find toast object by id\n   */\n  private _findToast(toastId: number): { index: number, activeToast: ActiveToast } | null {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return { index: i, activeToast: this.toasts[i] };\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Determines the need to run inside angular's zone then builds the toast\n   */\n  private _preBuildNotification(\n    toastType: string,\n    message: string | undefined,\n    title: string | undefined,\n    config: GlobalConfig,\n  ): ActiveToast | null {\n    if (config.onActivateTick) {\n      return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n    }\n    return this._buildNotification(toastType, message, title, config);\n  }\n\n  /**\n   * Creates and attaches toast data to component\n   * returns null if toast is duplicate and preventDuplicates == True\n   */\n  private _buildNotification(\n    toastType: string,\n    message: string | undefined,\n    title: string | undefined,\n    config: GlobalConfig,\n  ): ActiveToast | null {\n    if (!config.toastComponent) {\n      throw new Error('toastComponent required');\n    }\n    // max opened and auto dismiss = true\n    if (message && this.toastrConfig.preventDuplicates && this.isDuplicate(message)) {\n      return null;\n    }\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n      keepInactive = true;\n      if (this.toastrConfig.autoDismiss) {\n        this.clear(this.toasts[this.toasts.length - 1].toastId);\n      }\n    }\n    const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n    this.index = this.index + 1;\n    let sanitizedMessage: string | SafeHtml | undefined | null = message;\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n    }\n    const toastRef = new ToastRef(overlayRef);\n    const toastPackage = new ToastPackage(\n      this.index,\n      config,\n      sanitizedMessage,\n      title,\n      toastType,\n      toastRef,\n    );\n    const toastInjector = new ToastInjector(toastPackage, this._injector);\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\n    const ins: ActiveToast = {\n      toastId: this.index,\n      message: message || '',\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterClosed(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n      portal: overlayRef.attach(component, this.toastrConfig.newestOnTop),\n    };\n\n    if (!keepInactive) {\n      setTimeout(() => {\n        ins.toastRef.activate();\n        this.currentlyActive = this.currentlyActive + 1;\n      });\n    }\n\n    this.toasts.push(ins);\n    return ins;\n  }\n}\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport {\n  Component,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n} from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { IndividualConfig, ToastPackage } from './toastr-config';\nimport { ToastrService } from './toastr.service';\n\n@Component({\n  selector: '[toast-component]',\n  template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\">\n    &times;\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }}\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({\n        display: 'none',\n        opacity: 0,\n      })),\n      state('active', style({ opacity: 1 })),\n      state('removed', style({ opacity: 0 })),\n      transition('inactive => active',\n        animate('{{ easeTime }}ms {{ easing }}')\n      ),\n      transition('active => removed',\n        animate('{{ easeTime }}ms {{ easing }}'),\n      ),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class Toast implements OnDestroy {\n  message?: string | SafeHtml | null;\n  title?: string;\n  options: IndividualConfig;\n  /** width of progress bar */\n  width = -1;\n  /** a combination of toast type and options.toastClass */\n  @HostBinding('class') toastClasses = '';\n  /** controls animation */\n  @HostBinding('@flyInOut') state = {\n    value: 'inactive',\n    params: {\n      easeTime: this.toastPackage.config.easeTime,\n      easing: 'ease-in',\n    },\n  };\n  private timeout: any;\n  private intervalId: any;\n  private hideTime: number;\n  private sub: Subscription;\n  private sub1: Subscription;\n\n  constructor(\n    protected toastrService: ToastrService,\n    public toastPackage: ToastPackage,\n  ) {\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = { ...this.state, value: 'active' };\n    if (!this.options.disableTimeOut && this.options.timeOut) {\n      this.timeout = setTimeout(() => {\n        this.remove();\n      }, this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = (remaining / this.options.timeOut) * 100;\n    if (this.options.progressAnimation === 'increasing') {\n      this.width = 100 - this.width;\n    }\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n    if (this.width >= 100) {\n      this.width = 100;\n    }\n  }\n\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = {...this.state, value: 'removed'};\n    this.timeout = setTimeout(() =>\n      this.toastrService.remove(this.toastPackage.toastId),\n      this.toastPackage.config.easeTime,\n    );\n  }\n  @HostListener('click')\n  tapToast() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  @HostListener('mouseenter')\n  stickAround() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n\n    // disable progressBar\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n  @HostListener('mouseleave')\n  delayedHideToast() {\n    if (this.options.disableTimeOut\n      || this.options.extendedTimeOut === 0\n      || this.state.value === 'removed') {\n      return;\n    }\n    this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n}\n","import { Toast } from './toast.component';\nimport { GlobalConfig } from './toastr-config';\n\nexport class DefaultGlobalConfig implements GlobalConfig {\n  // Global\n  maxOpened = 0;\n  autoDismiss = false;\n  newestOnTop = true;\n  preventDuplicates = false;\n  iconClasses = {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning',\n  };\n\n  // Individual\n  toastComponent = Toast;\n  closeButton = false;\n  disableTimeOut: false;\n  timeOut = 5000;\n  extendedTimeOut = 1000;\n  enableHtml = false;\n  progressBar = false;\n  toastClass = 'toast';\n  positionClass = 'toast-top-right';\n  titleClass = 'toast-title';\n  messageClass = 'toast-message';\n  easing = 'ease-in';\n  easeTime = 300;\n  tapToDismiss = true;\n  onActivateTick = false;\n  progressAnimation: 'decreasing' | 'increasing' = 'decreasing';\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\n\nimport { Overlay } from '../overlay/overlay';\nimport { OverlayContainer } from '../overlay/overlay-container';\nimport { DefaultGlobalConfig } from './default-config';\nimport { TOAST_CONFIG } from './toast-token';\nimport { Toast } from './toast.component';\nimport { GlobalConfig } from './toastr-config';\nimport { ToastrService } from './toastr.service';\n\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [Toast],\n  declarations: [Toast],\n  entryComponents: [Toast],\n})\nexport class ToastrModule {\n  constructor(@Optional() @SkipSelf() parentModule: ToastrModule) {\n    if (parentModule) {\n      throw new Error('ToastrModule is already loaded. It should only be imported in your application\\'s main module.');\n    }\n  }\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders {\n    return {\n      ngModule: ToastrModule,\n      providers: [\n        { provide: TOAST_CONFIG, useValue: { config, defaults: DefaultGlobalConfig } },\n        OverlayContainer,\n        Overlay,\n        ToastrService,\n      ],\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ApplicationRef,\r\n  Component,\r\n  HostBinding,\r\n  HostListener,\r\n  NgModule,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\n\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { IndividualConfig, ToastPackage } from './toastr-config';\r\nimport { ToastrService } from './toastr.service';\r\n\r\n@Component({\r\n  selector: '[toast-component]',\r\n  template: `\r\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\">\r\n    &times;\r\n  </button>\r\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\r\n    {{ title }}\r\n  </div>\r\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\r\n  </div>\r\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\r\n    {{ message }}\r\n  </div>\r\n  <div *ngIf=\"options.progressBar\">\r\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\r\n  </div>\r\n  `,\r\n})\r\nexport class ToastNoAnimation implements OnDestroy {\r\n  message?: string | SafeHtml | null;\r\n  title?: string;\r\n  options: IndividualConfig;\r\n  /** width of progress bar */\r\n  width = -1;\r\n  /** a combination of toast type and options.toastClass */\r\n  @HostBinding('class') toastClasses = '';\r\n  /** controls animation */\r\n  state = 'inactive';\r\n  private timeout: any;\r\n  private intervalId: any;\r\n  private hideTime: number;\r\n  private sub: Subscription;\r\n  private sub1: Subscription;\r\n\r\n  constructor(\r\n    protected toastrService: ToastrService,\r\n    public toastPackage: ToastPackage,\r\n    protected appRef: ApplicationRef,\r\n  ) {\r\n    this.message = toastPackage.message;\r\n    this.title = toastPackage.title;\r\n    this.options = toastPackage.config;\r\n    this.toastClasses = `${toastPackage.toastType} ${\r\n      toastPackage.config.toastClass\r\n    }`;\r\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\r\n      this.activateToast();\r\n    });\r\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\r\n      this.remove();\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n    this.sub1.unsubscribe();\r\n    clearInterval(this.intervalId);\r\n    clearTimeout(this.timeout);\r\n  }\r\n  /**\r\n   * activates toast and sets timeout\r\n   */\r\n  activateToast() {\r\n    this.state = 'active';\r\n    if (!this.options.disableTimeOut && this.options.timeOut) {\r\n      this.timeout = setTimeout(() => {\r\n        this.remove();\r\n      }, this.options.timeOut);\r\n      this.hideTime = new Date().getTime() + this.options.timeOut;\r\n      if (this.options.progressBar) {\r\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n      }\r\n    }\r\n    if (this.options.onActivateTick) {\r\n      this.appRef.tick();\r\n    }\r\n  }\r\n  /**\r\n   * updates progress bar width\r\n   */\r\n  updateProgress() {\r\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\r\n      return;\r\n    }\r\n    const now = new Date().getTime();\r\n    const remaining = this.hideTime - now;\r\n    this.width = remaining / this.options.timeOut * 100;\r\n    if (this.options.progressAnimation === 'increasing') {\r\n      this.width = 100 - this.width;\r\n    }\r\n    if (this.width <= 0) {\r\n      this.width = 0;\r\n    }\r\n    if (this.width >= 100) {\r\n      this.width = 100;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tells toastrService to remove this toast after animation time\r\n   */\r\n  remove() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.state = 'removed';\r\n    this.timeout = setTimeout(\r\n      () => this.toastrService.remove(this.toastPackage.toastId),\r\n    );\r\n  }\r\n  @HostListener('click')\r\n  tapToast() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    this.toastPackage.triggerTap();\r\n    if (this.options.tapToDismiss) {\r\n      this.remove();\r\n    }\r\n  }\r\n  @HostListener('mouseenter')\r\n  stickAround() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.options.timeOut = 0;\r\n    this.hideTime = 0;\r\n\r\n    // disable progressBar\r\n    clearInterval(this.intervalId);\r\n    this.width = 0;\r\n  }\r\n  @HostListener('mouseleave')\r\n  delayedHideToast() {\r\n    if (this.options.disableTimeOut\r\n      || this.options.extendedTimeOut === 0\r\n      || this.state === 'removed') {\r\n      return;\r\n    }\r\n    this.timeout = setTimeout(\r\n      () => this.remove(),\r\n      this.options.extendedTimeOut,\r\n    );\r\n    this.options.timeOut = this.options.extendedTimeOut;\r\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ToastNoAnimation],\r\n  exports: [ToastNoAnimation],\r\n  entryComponents: [ToastNoAnimation],\r\n})\r\nexport class ToastNoAnimationModule {}\r\n"]}